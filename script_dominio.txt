--criar campos cofre
alter table notasaidanfe add cofre integer;
alter table notaentradanfe add cofre integer;
alter table pdv.vendanfce add cofre integer;


--criar funcoes dos gatilhos
CREATE OR REPLACE FUNCTION dominio_gatilho() RETURNS trigger AS $dominio_gatilho$
    BEGIN
		IF(NEW.id_situacaonfe <> OLD.id_situacaonfe) THEN
			NEW.cofre := 0;
        END IF;
        RETURN NEW;
    END;
$dominio_gatilho$ LANGUAGE plpgsql;


CREATE OR REPLACE FUNCTION dominio_nfce_gatilho() RETURNS trigger AS $dominio_nfce_gatilho$
    BEGIN
		IF(NEW.id_situacaonfce <> OLD.id_situacaonfce) THEN
			NEW.cofre := 0;
        END IF;
        RETURN NEW;
    END;
$dominio_nfce_gatilho$ LANGUAGE plpgsql;


--criar gatilhos
   create TRIGGER dominio_gatilho BEFORE UPDATE ON notasaidanfe
    FOR EACH ROW EXECUTE PROCEDURE dominio_gatilho();
   
   create TRIGGER dominio_gatilho BEFORE UPDATE ON notaentradanfe
    FOR EACH ROW EXECUTE PROCEDURE dominio_gatilho();
   
   create TRIGGER dominio_nfce_gatilho BEFORE UPDATE ON pdv.vendanfce
    FOR EACH ROW EXECUTE PROCEDURE dominio_nfce_gatilho();


CREATE schema IF NOT EXISTS dominio_api;

CREATE TABLE IF NOT EXISTS dominio_api.token(token text COLLATE pg_catalog."default",id_loja integer);

INSERT INTO dominio_api.token(token,id_loja) VALUES ('token1',1);


